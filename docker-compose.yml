version: '3.6'

services:
  # The Docker-in-Docker (DinD) service.
  dind:
    image: docker:20.10.7-dind 
    privileged: true 
    container_name: jenkins-docker 
    restart: unless-stopped # Ensure the service restarts automatically if it stops unexpectedly.
    networks:
      jenkins_net: 
        aliases:
          - docker 
    volumes:
      - jenkins-docker-certs:/certs/client 
      - jenkins-data:/var/jenkins_home # Share the jenkins_home volume to allow Jenkins to access Docker build contexts.

  # The Jenkins controller service.
  jenkins:
    image: jenkins/jenkins:lts-jdk11 # Use the official Long-Term Support Jenkins image with JDK 11.
    container_name: jenkins-controller 
    restart: unless-stopped # Ensure the service restarts automatically.
    networks:
      - jenkins_net 
    ports:
      - "8080:8080" 
      - "50000:50000" 
    volumes:
      - jenkins-data:/var/jenkins_home # Mount the named volume to persist Jenkins data (jobs, configurations, etc.).
      - jenkins-docker-certs:/certs/client:ro # Mount the certs volume in read-only mode for security.
    environment:
      # Configure Jenkins to connect to the DinD service using TLS for a secure connection.
      - DOCKER_HOST=tcp://docker:2376
      - DOCKER_CERT_PATH=/certs/client
      - DOCKER_TLS_VERIFY=1

# Define the networks to be created.
networks:
  jenkins_net: 
    driver: bridge

# Define the named volumes to persist data.
volumes:
  jenkins-data: # Persists Jenkins home directory data.
  jenkins-docker-certs: # Persists Docker TLS certificates.
