# Version of the Docker Compose file format.
version: '3.8'

# Define all the services that make up our application.
services:
  # The Docker-in-Docker (DinD) service.
  # This container runs a standalone Docker daemon, which Jenkins will connect to.
  dind:
    image: docker:20.10.7-dind # Use a specific version of the Docker-in-Docker image.
    privileged: true # Privileged mode is required for the Docker daemon to run inside a container.
    container_name: jenkins-docker # A friendly name for the DinD container.
    restart: unless-stopped # Ensure the service restarts automatically if it stops unexpectedly.
    networks:
      jenkins_net: # Connect to our custom network.
        aliases:
          - docker # The hostname 'docker' will resolve to this container's IP on the jenkins_net network.
    volumes:
      - jenkins-docker-certs:/certs/client # Named volume for TLS certificates.
      - jenkins-data:/var/jenkins_home # Share the jenkins_home volume to allow Jenkins to access Docker build contexts.

  # The Jenkins controller service.
  # This container runs the main Jenkins application.
  jenkins:
    image: jenkins/jenkins:lts-jdk11 # Use the official Long-Term Support Jenkins image with JDK 11.
    container_name: jenkins-controller # A friendly name for the Jenkins container.
    restart: unless-stopped # Ensure the service restarts automatically.
    networks:
      - jenkins_net # Connect to our custom network so it can reach the DinD service.
    ports:
      - "8080:8080" # Map host port 8080 to the container's port 8080 for accessing the Jenkins UI.
      - "50000:50000" # Map port 50000 for communication with Jenkins agents.
    volumes:
      - jenkins-data:/var/jenkins_home # Mount the named volume to persist Jenkins data (jobs, configurations, etc.).
      - jenkins-docker-certs:/certs/client:ro # Mount the certs volume in read-only mode for security.
    environment:
      # Configure Jenkins to connect to the DinD service using TLS for a secure connection.
      - DOCKER_HOST=tcp://docker:2376
      - DOCKER_CERT_PATH=/certs/client
      - DOCKER_TLS_VERIFY=1

# Define the networks to be created.
networks:
  jenkins_net: # A custom bridge network to allow containers to communicate with each other by name.
    driver: bridge

# Define the named volumes to persist data.
volumes:
  jenkins-data: # Persists Jenkins home directory data.
  jenkins-docker-certs: # Persists Docker TLS certificates.
