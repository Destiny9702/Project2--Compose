# Defines the version of the Docker Compose file format.
version: '3.7'

# Defines the services (containers) for the environment.
services:
  # The Docker-in-Docker (DinD) service.
  dind:
    image: docker:20.10.7-dind
    privileged: true # 'privileged' mode is required for a Docker daemon to run inside a container.
    container_name: jenkins-docker
    restart: unless-stopped # Ensures the service restarts automatically if it stops unexpectedly.
    networks:
      jenkins_net:
        aliases:
          - docker # Allows other services to reach this container using the hostname 'docker'.
    volumes:
      # Named volume for storing and sharing TLS certificates.
      - jenkins-docker-certs:/certs/client
      # Shares the Jenkins home volume so the Docker daemon can access build workspaces.
      - jenkins-data:/var/jenkins_home
      # Named volume for Docker layer cache to improve build performance.
      - docker-layer-cache:/var/lib/docker
    environment:
      # Tells the DinD service to automatically generate TLS certificates.
      - DOCKER_TLS_CERTDIR=/certs

  # The Jenkins controller service.
  jenkins:
    image: jenkins/jenkins:lts-jdk11
    user: root
    container_name: jenkins-controller
    restart: unless-stopped
    depends_on:
      - dind # Ensures the 'dind' service starts before the 'jenkins' service.
    networks:
      - jenkins_net # Connects Jenkins to the same network as the 'dind' service.
    ports:
      - "8080:8080"   # Maps port for the Jenkins web interface.
      - "50000:50000" # Maps port for Jenkins agent communication.
    volumes:
      # Named volume to persist all Jenkins data (jobs, plugins, configurations).
      - jenkins-data:/var/jenkins_home
      # Mounts the TLS certificates from the shared volume in read-only mode.
      - jenkins-docker-certs:/certs/client:ro
    environment:
      # Tells the Jenkins controller where to find the Docker daemon (the 'dind' service).
      - DOCKER_HOST=tcp://docker:2376
      # Specifies the path to the client TLS certificates for the connection.
      - DOCKER_CERT_PATH=/certs/client
      # Enforces a secure, verified TLS connection to the Docker daemon.
      - DOCKER_TLS_VERIFY=1

# Defines the networks.
networks:
  jenkins_net:
    driver: bridge 

# Defines the named volumes for persistent data storage.
volumes:
  # Volume for Jenkins home directory data.
  jenkins-data:
  # Volume for shared Docker TLS certificates.
  jenkins-docker-certs:
  # Volume for the persistent Docker layer cache.
  docker-layer-cache:
