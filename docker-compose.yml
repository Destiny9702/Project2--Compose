# Defines the version of the Docker Compose file format.
version: '3.7'

# Defines the services (containers) for our environment.
services:
  # The Docker-in-Docker (DinD) service.
  # This container's sole purpose is to run a Docker daemon that Jenkins can connect to.
  dind:
    image: docker:20.10.7-dind
    privileged: true # 'privileged' mode is required for a Docker daemon to run inside a container.
    container_name: jenkins-docker
    restart: unless-stopped # Ensures the service restarts automatically if it stops unexpectedly.
    networks:
      jenkins_net:
        aliases:
          - docker
    # 'volumes' for the dind service.
    volumes:
      # Named volume for storing TLS certificates for secure communication.
      - jenkins-docker-certs:/certs/client
      # Shares the Jenkins home volume so DinD can access build contexts.
      - jenkins-data:/var/jenkins_home
      # Named volume for Docker layer cache to improve build performance.
      - docker-layer-cache:/var/lib/docker
    # 'environment' variables for the dind service.
    environment:
      # Specifies directory for TLS certificates (enables certificate generation).
      - DOCKER_TLS_CERTDIR=/certs

  # The Jenkins controller service.
  # This container runs the main Jenkins application.
  jenkins:
    image: jenkins/jenkins:lts-jdk11
    container_name: jenkins-controller
    restart: unless-stopped
    depends_on:
      - dind
    networks:
      - jenkins_net # Connects Jenkins to the same network as the dind service.
    ports:
      - "8080:8080"   # Jenkins web interface
      - "50000:50000" # Jenkins agent communication port
    # 'volumes' for the jenkins service.
    volumes:
      # Named volume to persist all Jenkins data (jobs, plugins, configurations).
      - jenkins-data:/var/jenkins_home
      # Mounts the TLS certificates in read-only mode for connecting to DinD.
      - jenkins-docker-certs:/certs/client:ro
    # 'environment' variables for the jenkins service.
    environment:
      # Tells Jenkins where to find the Docker daemon.
      - DOCKER_HOST=tcp://docker:2376
      # Specifies the path to the client TLS certificates.
      - DOCKER_CERT_PATH=/certs/client
      # Enforces a secure, verified TLS connection to the Docker daemon.
      - DOCKER_TLS_VERIFY=1

networks:
  jenkins_net:
    driver: bridge

# 'volumes' defines named volumes for persistent data storage.
volumes:
  # Volume for Jenkins home directory data.
  jenkins-data:
    name: jenkins-data  
  # Volume for Docker TLS certificates.
  jenkins-docker-certs:
    name: jenkins-docker-certs  
  # Volume for Docker layer cache to improve build performance.
  docker-layer-cache:
    name: docker-layer-cache
